@page "/"
@using StremingDemo.Models
@rendermode InteractiveServer
@inject NavigationManager Navigation

@if (videos is not null )
{
    <div class="row d-flex justify-content-center">
        @foreach (var video in videos)
        {
            var uri = "Watch/" + video.Code;
            <div class="col-lg-2 col-md-4 col-sm-12 p-2">
                <Card Class="mb-4 w-100">
                    <img @onclick="() => Navigation.NavigateTo(uri)" class="clickable-element rounded-top img-fixed" src="@($"/api/videos/{video.Code}.jpg")" alt="placeholder" />
                    <CardBody @onclick="() => Navigation.NavigateTo(uri)" class="text-center">
                        <CardTitle @onclick="() => Navigation.NavigateTo(uri)" class="clickable-element">@video.Code</CardTitle>
                        <Icon Name="IconName.PlayCircleFill" Size="IconSize.x3" Color="IconColor.Dark" @onclick="() => Navigation.NavigateTo(uri)" class="clickable-icon" />
                    </CardBody>
                </Card>
            </div>
        }
    </div>
}


@code {


    public List<Video> videos { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Ignore SSL certificate validation
        var handler = new HttpClientHandler
            {
                ServerCertificateCustomValidationCallback = (message, cert, chain, errors) => true
            };

        // Create HttpClient with custom handler
        var httpClient = new HttpClient(handler)
            {
                BaseAddress = new Uri(Navigation.BaseUri)
            };

        videos = await httpClient.GetFromJsonAsync<List<Video>>("api/videos/list");


    }

}
